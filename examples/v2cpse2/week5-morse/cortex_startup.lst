	.cpu cortex-m0
	.fpu softvfp
	.eabi_attribute 20, 1
	.eabi_attribute 21, 1
	.eabi_attribute 23, 3
	.eabi_attribute 24, 1
	.eabi_attribute 25, 1
	.eabi_attribute 26, 1
	.eabi_attribute 30, 4
	.eabi_attribute 34, 0
	.eabi_attribute 18, 4
	.code	16
	.file	"cortex_startup.c"
	.section	.text.__startup,"ax",%progbits
	.align	1
	.global	__startup
	.code	16
	.thumb_func
	.type	__startup, %function
__startup:
	push	{r4, lr}
	ldr	r3, .L10
.L2:
	ldr	r2, .L10+4
	add	r1, r3, #4
	sub	r3, r3, #4
	cmp	r3, r2
	beq	.L8
	mov	r2, #0
	str	r2, [r3]
	mov	r3, r1
	b	.L2
.L8:
	ldr	r2, .L10+8
	ldr	r1, .L10+12
	mov	r3, #0
	sub	r1, r1, r2
	lsr	r1, r1, #2
	add	r1, r1, #1
	lsl	r1, r1, #2
.L4:
	add	r3, r3, #4
	cmp	r3, r1
	beq	.L9
	ldr	r4, .L10+16
	add	r0, r2, r3
	add	r4, r3, r4
	sub	r4, r4, #4
	ldr	r4, [r4]
	sub	r0, r0, #4
	str	r4, [r0]
	b	.L4
.L9:
	bl	main
.L6:
	b	.L6
.L11:
	.align	2
.L10:
	.word	__bss_start+4
	.word	__bss_end
	.word	__data_start
	.word	__data_end
	.word	__data_init_start
	.size	__startup, .-__startup
	.section	.text.__cxa_pure_virtual,"ax",%progbits
	.align	1
	.global	__cxa_pure_virtual
	.code	16
	.thumb_func
	.type	__cxa_pure_virtual, %function
__cxa_pure_virtual:
	@ sp needed
	bx	lr
	.size	__cxa_pure_virtual, .-__cxa_pure_virtual
	.comm	__dso_handle,4,4
	.global	__vectors
	.section	.vectors,"a",%progbits
	.align	2
	.type	__vectors, %object
	.size	__vectors, 32
__vectors:
	.word	__stack_end
	.word	__startup
	.space	24
	.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.3 20140228 (release) [ARM/embedded-4_8-branch revision 208322]"
